version: 2.1

references:
  workspace_root: &workspace_root
    /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
    build:
        docker:
            - image: circleci/openjdk:8-jdk-node
        working_directory: ~/repo
        environment:
            MAVEN_OPTS: -Xmx3200m
            
        steps:
            - *attach_workspace
            - checkout
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "pom.xml" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-
            
            - run: mvn dependency:go-offline
            - save_cache:
                paths:
                    - ~/.m2
                key: v1-dependencies-{{ checksum "pom.xml" }}
                
            # build the apps!!
            - run:
                name: Build the application
                command: |
                    mvn clean package
                    mkdir -p /tmp/workspace/target
                    mv target/hello-shiftleft-0.0.1.jar /tmp/workspace/target/
                    cp uat.sh /tmp/workspace/target
                    
            - persist_to_workspace:
                root: *workspace_root
                paths:
                    - target

                
    ShiftLeft_code_analysis:
        docker:
            - image: circleci/openjdk:8-jdk-node
        working_directory: ~/repo
        
        steps:
            - attach_workspace:
                at: .
            - run:
                name: Update PATH and Define Environment Variable at Runtime
                command: |
                    echo 'export APP_NAME=Docker_Demo_App' >> $BASH_ENV
                    source $BASH_ENV
            
            - run:
                name: Install ShiftLeft agent
                command: curl https://www.shiftleft.io/download/sl-latest-linux-x64.tar.gz > /tmp/sl.tar.gz && sudo tar -C /usr/local/bin -xzf /tmp/sl.tar.gz
                
            - run:
                name: Analyze for security bugs
                command: sl analyze --wait --tag branch=$CIRCLE_BRANCH --app $APP_NAME target/hello-shiftleft-0.0.1.jar
                
            #   Prioritize security bugs
            - run:
                name: Prioritize security bugs
                command: sh target/uat.sh
                
            #   Test Security Results
            - run:
                name: Assert build quality against security standards
                command: |
                    BUILD_RESULT=$(curl -X GET "https://www.shiftleft.io/api/v3/public/org/$SHIFTLEFT_ORG_ID/app/$APP_NAME/tag/branch/$CIRCLE_BRANCH/build" -H "Authorization: Bearer $SHIFTLEFT_API_TOKEN" -H 'Accept: */*' -H 'Cache-Control: no-cache' -H 'Connection: keep-alive' -H 'Host: www.shiftleft.io' -H 'accept-encoding: text/plain, deflate' -H 'cookie: Cookie_3=value' -s -b Cookie_3=value)
                    if [ $(echo $BUILD_RESULT | grep "success") ]; then
                        PR_COMMENT="ShiftLeft did not detect any vulnerabilities that violate policy. This PR can be merged."
                    else
                        URL="https://shiftleft.io/"
                        URL+=$(echo $OUTPUT | jq -r '.errorDetails')
                        echo "URL- $URL"
                        PR_COMMENT="ShiftLeft found vulnerabilities that violate policy. Go here for more details - $URL"
                    fi

            - run:
                name: Adding comment to the PR
                command: |
                    if [ ! -z "$CIRCLE_PULL_REQUEST" ]; then
                        PR_USER=$(echo $CIRCLE_PULL_REQUEST | cut -d '/' -f4)
                        PR_REPO=$(echo $CIRCLE_PULL_REQUEST | cut -d '/' -f5)
                        PR_NUMBER=$(echo $CIRCLE_PULL_REQUEST | cut -d '/' -f7)
                        curl -X POST https://api.github.com/repos/$PR_USER/$PR_REPO/issues/$PR_NUMBER/comments -H "Authorization: token $GH_AUTH_TOKEN" -d "{\"body\": \"$PR_COMMENT\"}"

                        if [ $(echo $BUILD_RESULT | grep "success") ]; then
                            echo "Failing the build since PR violates security policy"
                            exit 1
                        fi
                    else
                        echo "No PR information. Was this a commit/merge to the master branch?"
                         if [ $(echo $BUILD_RESULT | grep "success") ]; then
                            echo "Failing the build since commit/merge violates security policy"
                            exit 1
                        fi
                    fi
                    
workflows:
    version: 2
    build_and_test:
        jobs:
            - build
#            - ShiftLeft_code_analysis
            - ShiftLeft_code_analysis:
                requires:
                    - build
